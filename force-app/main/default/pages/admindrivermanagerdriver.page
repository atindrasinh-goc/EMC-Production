<apex:page showHeader="false" title="Driver Details" sidebar="false" controller="AdminManagerDriverDashboardController" action="{!getRedirected}">
    <html lang="en">
        <head>
            <apex:include pageName="EMC_Common_Head"/>
            <script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
            <script src="https://code.angularjs.org/1.4.0-beta.5/angular.js"></script>            
            <script src="https://gitcdn.github.io/bootstrap-toggle/2.1.0/js/bootstrap-toggle.min.js"></script>
            <script src="https://angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.9.0.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
            <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.EmcCSS, 'emc-design/assets/css/CustomStyle.css')}" />
            <!-- for excel download directive-->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.1/jszip.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.1/xlsx.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
            <!-- for complete excel download directive-->
            <script src="{!URLFOR($Resource.modelJs)}"></script>
            <script src="{!URLFOR($Resource.dirPagination)}"></script>
        </head>
        <script type="text/javascript">
            var app = angular.module('managerdriverDashboardModule',['ui.bootstrap','angularUtils.directives.dirPagination']);
            var MileagesofReimbursements = function (visible) {
                  this.visible = visible;
                };
                
                MileagesofReimbursements.prototype.open = function(fileName,month,mileageList,emailOfEmployee) {
                    this.fileName = fileName;
                    this.visible = true;
                    this.mileageList = mileageList;
                    this.clickedMonth = month;
                    this.emailOfEmployee = emailOfEmployee;
                };

                MileagesofReimbursements.prototype.close = function() {
                  this.visible = false;
                };


app.directive('driverReimbursementsDialogDirective', [ '$filter',
function($filter) {
    return {
        restrict: 'E',
        scope: {
            model: '=',
            data: "&exportData",
            someCtrlFn: '&callbackFn',
            modalformsg: '&modalOpen'
        },
        link: function(scope, element, attributes) {
            scope.$watch('model.visible', function(newValue) {
                var modalElement = element.find('.modal');
                modalElement.modal(newValue ? 'show' : 'hide');
                if(newValue == true){
                    scope.callfn('');
                }
                else {
                    scope.IsAllChecked = false;
                    scope.IsAllCheckedFlag = false;
                    scope.checkAllShowApprove = false;
                    scope.checkAllShowFlag = false;
                }
                angular.forEach(scope.model.mileageList, function(item) {
                   
                    if(item.isSelected || item.isChecked){
                       
                        scope.selectedmonth = scope.model.clickedMonth;
                        scope.selectedyear   = scope.model.clickedYear;
                        scope.selecteddid = item.driverid;
                    }
                });
            });
            
            scope.totalMileage = 0;
            scope.totalVariableAmount = 0;
            scope.showmanagermodalsearchbar = false;
            scope.selecteddid = '';
            scope.displayBtn = false;
            scope.IsAllChecked = false;
            scope.IsAllCheckedFlag = false;                                
            scope.checkAllShowApprove = false;
            scope.checkAllShowFlag = false;
            scope.selectedmileageidlist = [];
            scope.selectedrejectedmileageidlist = [];
            scope.showData=[];
            scope.total = 0 ;
            scope.totalvariablerate = 0 ;
            scope.currentPage=1;
            scope.lastIndex=0;
            scope.totalRecords;
            scope.reverse = false;
            scope.maxPage = 0;
            scope.search="";
            scope.itemPerPage = 8;
            scope.searchedArray = [];
            scope.init = function () {
            scope.showData = [];
            scope.total = 0.0;
            scope.totalvariablerate = 0.0;
            scope.maxPage = 0;
            scope.totalRecords = scope.model.mileageList.length;
            scope.model.mileageList
            let tl = 0;
            let tv = 0;
            scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
            scope.totalRecords
            for (var i = 0; i < scope.itemPerPage; i++) {
                scope.currentPage = 1;
                if (scope.model.mileageList[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                    tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                    tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                    /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    scope.showData.push(scope.model.mileageList[i])
                }
                scope.lastIndex = i + 1;
            }
            scope.total = tl.toFixed(2);
            scope.totalvariablerate = tv.toFixed(2);
        }
        scope.next = function () {
            
            scope.showData = [];
            scope.total = 0;
            scope.totalvariablerate = 0;
            var lstInd = scope.lastIndex;
            let tl = 0;
            let tv = 0;
            
            for (var i = scope.lastIndex; i < lstInd + scope.itemPerPage; i++) {
              let isSearch = scope.searchedArray.length>0?true:false
                if(isSearch){
                    if (scope.searchedArray[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                    scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    tl = tl + parseFloat(scope.searchedArray[i].mileage);
                    tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                    scope.showData.push(scope.searchedArray[i])
                    }
                }else{
                    if(scope.model.mileageList[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                    scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                    tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                    scope.showData.push(scope.model.mileageList[i])
                    }
                }
                scope.lastIndex = i + 1;
            }
            
            scope.total = tl.toFixed(2);
            scope.totalvariablerate = tv.toFixed(2);
            scope.currentPage++;
        }
        scope.previous = function () {
            scope.showData = [];
            scope.total = 0;
            scope.totalvariablerate = 0;
            let tl = 0;
            let tv = 0;
            var lstInd = scope.lastIndex;
            for (var i = scope.lastIndex - (scope.itemPerPage*2); i < lstInd - scope.itemPerPage; i++) {
             let isSearch = scope.searchedArray.length>0?true:false
                if(isSearch){
                    if (scope.searchedArray[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                    scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    tl = tl + parseFloat(scope.searchedArray[i].mileage);
                    tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                    scope.showData.push(scope.searchedArray[i])
                    }
                }else{
                    if (scope.model.mileageList[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                    scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                    tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                    scope.showData.push(scope.model.mileageList[i])
                }
                }
                scope.lastIndex = i + 1;
            }
            scope.total = tl.toFixed(2);
            scope.totalvariablerate = tv.toFixed(2);
            scope.currentPage--;
        }
            scope.sortKey = 'tripdate';   
            scope.sort = function (keyName) {
            //$scope.reverse = !$scope.reverse;
                scope.reverse = (scope.sortKey === keyName) ? !scope.reverse : false;
                scope.sortKey = keyName;
             
                if (keyName === 'mileage' || keyName === 'variableamount') {
                   scope.model.mileageList.sort(function (a, b) {
                    
                        var numA = parseInt(a[keyName]),
                            numB = parseInt(b[keyName]);
                        if (scope.reverse1) {
                            if (numA < numB) //sort string ascending
                                return -1
                            if (numA > numB)
                                return 1
                        return 0
                      } 
                    else {
                        if (numA < numB) //sort string ascending
                             return 1
                        if (numA > numB)
                            return -1
                    return 0 //default return value (no sorting)
                    }
                })
             }
                if (keyName === 'origin' || keyName === 'destination') {
                   scope.model.mileageList.sort(function (a, b) {
                        var nameA = a[keyName].toLowerCase(),
                            nameB = b[keyName].toLowerCase()
                        if (scope.reverse) {
                            if (nameA < nameB) //sort string ascending
                                return -1
                            if (nameA > nameB)
                                return 1
                            return 0 //default return value (no sorting)
                        } else {
                            if (nameA < nameB) //sort string ascending
                                return 1
                            if (nameA > nameB)
                                return -1
                            return 0 //default return value (no sorting)
                        }
                    })
                }
                if (keyName === 'tripdate' || keyName === 'submitteddate' || keyName === 'approveddate') {
                   scope.model.mileageList.sort(function (a, b) {
                        var nameA = new Date(a[keyName].toLowerCase()),
                            nameB = new Date(b[keyName].toLowerCase())
                        if (scope.reverse) {
                            if (nameA < nameB) //sort string ascending
                                return -1
                            if (nameA > nameB)
                                return 1
                            return 0 //default return value (no sorting)
                        } else {
                            if (nameA < nameB) //sort string ascending
                                return 1
                            if (nameA > nameB)
                                return -1
                            return 0 //default return value (no sorting)
                        }
                    })
                }
                scope.showData = [];
                scope.total = 0;
                scope.totalvariablerate = 0;
                var lstInd = scope.lastIndex;
                let tl = 0;
                let tv = 0;
                for (var i = scope.lastIndex - scope.itemPerPage; i < lstInd; i++){
                    if (scope.model.mileageList[i]) {
                        /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                        scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                        tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                        tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                        scope.showData.push(scope.model.mileageList[i])
                    }                                        
                    scope.lastIndex = i + 1;
                }
                scope.total = tl.toFixed(2);
                scope.totalvariablerate = tv.toFixed(2);
            }

            scope.callfn = function(flagstatus){    
                scope.init();
                scope.totalMileage = 0;
                scope.totalVariableAmount = 0;
                scope.model.mileageList
                
                let approvedcount = 0,flagcount = 0,approvedchkcount = 0;
                let countapprovemil = 0;
                if(scope.model.mileageList.length == 0) {
                    scope.checkAllShowApprove = false;
                    scope.checkAllShowFlag = false;
                    scope.displayBtn = false; 
                    scope.displayDownloadBtn = false;
                }
                if(scope.showData.length > 0){
                    if(scope.model.mileageList.length > 8)
                        scope.showmanagermodalsearchbar = true;        
                    else
                        scope.showmanagermodalsearchbar = false;

                    scope.displayDownloadBtn = true;
                    scope.totalMileage = 0;
                    scope.totalVariableAmount = 0
                    let tv = 0;
                    let tm = 0;
                    angular.forEach(scope.model.mileageList, function(item) {
                        /*scope.totalMileage =  scope.totalMileage + parseFloat(item.mileage);*/
                        /*scope.totalVariableAmount = scope.totalVariableAmount + parseFloat(item.variableamount);*/
                        if(item.variableamount)
                            tv = tv + parseFloat(item.variableamount);
                        scope.totalVariableAmount = tv.toFixed(2);
                        if(item.mileage)
                            tm = tm + parseFloat(item.mileage);
                        scope.totalMileage = tm.toFixed(2);

                        if((item.status != 'None' && item.status != '') && item.mileage > 0) {
                            approvedchkcount++;
                            scope.checkAllShowApprove = true;
                            scope.checkAllShowFlag = true;

                            if(item.isSelected){   
                                approvedcount++;
                            } else if(item.isChecked){
                                flagcount++;
                            }
                        }
                        if(item.status == 'Approved')
                        {
                            countapprovemil++;
                        }
                    });
                    
                    if((scope.model.mileageList.length - countapprovemil ) > 0){
                        scope.checkAllShowApprove = true;
                    }
                    else if((scope.model.mileageList.length - countapprovemil ) == 0) {
                        scope.checkAllShowApprove = false;
                    }
                    if(approvedchkcount == 0 && approvedcount == 0){
                        scope.checkAllShowApprove = false;
                    }
                    else
                    {
                        if(approvedchkcount == approvedcount){
                            scope.IsAllChecked = true;
                            scope.IsAllCheckedFlag = false;
                        }                                            
                    }
                    if(approvedchkcount == 0 && flagcount == 0){
                        scope.checkAllShowFlag = false;
                    }
                    else
                    {
                        if(approvedchkcount == flagcount){
                            scope.IsAllCheckedFlag = true;
                            scope.IsAllChecked = false;
                        } 
                    }
                }
                var checktrues = $filter("filter")(scope.model.mileageList , {isChecked:true} );
                var selectedtrues = $filter("filter")(scope.model.mileageList , {isChecked:true} );
                if(checktrues.length > 0 || selectedtrues.lenght > 0)
                    scope.displayBtn = true;   
                else
                    scope.displayBtn = false;
                if(flagstatus != '')
                {
                    scope.modalformsg({status:flagstatus});
                }
            }
            scope.CheckUncheckAll = function() {
                if(scope.IsAllChecked == true)
                    scope.displayBtn = true;
                else
                    scope.displayBtn = false;

                scope.countMileag = 0;
                scope.showData = [];
                scope.selectedmileageidlist = [];
                angular.forEach(scope.model.mileageList, function(item) {
                    item.isSelected = scope.IsAllChecked;
                    scope.countMileag = scope.countMileag + parseFloat(item.mileage);
                    scope.selectedmileageidlist.push(item.id);
                    if(item.isChecked){
                        item.isChecked = !item.isChecked;
                        if(scope.IsAllCheckedFlag){
                            scope.IsAllCheckedFlag = false;
                        }
                    }
                });
                for(var i = 0;i<scope.itemPerPage;i++){
                    scope.currentPage=1;
                    if(scope.model.mileageList[i]){
                        scope.showData.push(scope.model.mileageList[i])
                    }
                    scope.lastIndex=i+1;
                }
            };

            scope.CheckUncheckHeader = function() {
                scope.selectedmonth = '';
                scope.selecteddid = '';
                scope.selectedyear = '';
                scope.selectedmileageidlist = [];
                scope.countMileag = 0;
                //var total = $('.myteamcheck').length;
                var total = scope.model.mileageList.length;
                var count = 0;
                
                angular.forEach(scope.showData, function(item) {
                    if(item.isSelected){
                        count++;
                        scope.countMileag = scope.countMileag + parseFloat(item.mileage);
                        scope.selectedmileageidlist.push(item.id);
                        scope.selectedmonth = scope.model.clickedMonth;
                        scope.selectedyear = scope.model.clickedYear;
                        scope.selecteddid = item.driverid;
                        if(item.isChecked){
                            item.isChecked = !item.isChecked;
                        }
                    }
                });
                if(total == count && (total != 0 && count !=0 ))
                {
                    scope.model.mileageList = scope.showData
                    scope.IsAllChecked = true;
                    scope.IsAllCheckedFlag = false;
                }
                else{
                    scope.IsAllChecked = false;
                    scope.IsAllCheckedFlag = false;
                }
                var trues = $filter("filter")(scope.model.mileageList , {isChecked:true} );
                scope.chkselectcount = trues.length;
                if(count == 0 && scope.chkselectcount == 0)
                    scope.displayBtn = false;   
                else
                    scope.displayBtn = true;
            };

            scope.CheckUncheckAllForFlag = function() {
                scope.selectedrejectedmileageidlist = [];
                scope.selectedmonth = '';    
                scope.showData = [];
                if(scope.IsAllCheckedFlag == true)
                    scope.displayBtn = true;
                else
                    scope.displayBtn = false;

                angular.forEach(scope.model.mileageList, function(item) {
                    if (item.isChecked){
                        scope.selectedmonth = scope.model.clickedMonth;
                    }
                    item.isChecked = scope.IsAllCheckedFlag;
                    scope.selectedrejectedmileageidlist.push(item.id);
                    if(item.isSelected){
                        item.isSelected = !item.isSelected;
                        if(scope.IsAllChecked){
                            scope.IsAllChecked = false;
                        }
                    }
                });
                for(var i = 0;i<scope.itemPerPage;i++){
                    scope.currentPage=1;
                    if(scope.model.mileageList[i]){
                        scope.showData.push(scope.model.mileageList[i])
                    }
                    scope.lastIndex=i+1;
                }
            };

            scope.CheckUncheckHeaderForFlag = function(index) {
                scope.selectedmonth = '';
                scope.selecteddid = '';
                scope.selectedyear = '';
                scope.selectedrejectedmileageidlist = [];
                //var total = $('.flagcheck').length;
                var total = scope.model.mileageList.length;
                var count = 0;
                
                angular.forEach(scope.showData, function(item) {
                    if(item.isChecked){
                        count++;
                        scope.selectedrejectedmileageidlist.push(item.mileage);
                        scope.selectedmonth = scope.model.clickedMonth;
                        scope.selectedyear = scope.model.clickedYear;
                        scope.selecteddid = item.driverid;
                        if(item.isSelected){
                            item.isSelected = !item.isSelected;
                        }
                    }
                });
                if(total == count && (total != 0 && count !=0 )){
                    scope.model.mileageList = scope.showData
                    scope.IsAllCheckedFlag = true;
                    scope.IsAllChecked = false;
                }
                else{
                    scope.IsAllCheckedFlag = false;
                    scope.IsAllChecked = false;
                }
                
                var trues = $filter("filter")(scope.model.mileageList , {isSelected:true} );
                scope.chkselectcount = trues.length;
                
                if(count == 0 && scope.chkselectcount == 0)
                    scope.displayBtn = false;   
                else
                    scope.displayBtn = true;
            };
            scope.refreshpage = function(mileages){
             
                scope.someCtrlFn({updatedmileagelist:mileages});
            }
 
             scope.updatePagination=function()
             {
                 
                    if(scope.search.length>0){
                    scope.itemPerPage = 8;
                    
                    var filteredArray = scope.model.mileageList.filter(function(number) {
                        
                        if(number.origin != '' && number.origin != null && number.origin != undefined && number.destination != '' && number.destination != null && number.destination != undefined){
                                             
                            return number.origin.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1||number.destination.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1;
                        }
                    return number.origin,number.destination;
                });
                    
                    scope.searchedArray = filteredArray;
                    scope.showData = [];
                    scope.total = 0.0;
                    scope.totalvariablerate = 0.0;
                    scope.maxPage = 0;
                    scope.totalRecords = filteredArray.length;
                    
                    let tl = 0;
                    let tv = 0;
                    scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
                    scope.totalRecords
                    for (var i = 0; i < scope.itemPerPage; i++) {
                    scope.currentPage = 1;
                    if (filteredArray[i]) {
                    /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                    tl = tl + parseFloat(filteredArray[i].mileage);
                    tv = tv + parseFloat(filteredArray[i].variableamount);
                    /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                    scope.showData.push(filteredArray[i])
                    }
                    scope.lastIndex = i + 1;
                    }
                    if(scope.showData.length == 0){
                        scope.displayDownloadBtn = false;
                    }
                    else{
                        scope.displayDownloadBtn = true;
                    }
                    scope.total = tl.toFixed(2);
                    scope.totalvariablerate = tv.toFixed(2);
                    
                    
                    }else{
                    scope.itemPerPage = 8;
                    scope.init();
                    scope.searchedArray.length = 0;
                    scope.displayDownloadBtn = true;
                    }
                    
                    
             }
            element.on('shown.bs.modal', function() {
                scope.$apply(function() {
                    scope.model.visible = true; 
                });
            });
            element.on('hidden.bs.modal', function() {
                scope.$apply(function() {
                    scope.model.visible = false;
                    scope.search="";
                    scope.searchedArray.length = 0;
                });
            });

            $('input[type=search]').on('search', function () {
                scope.search="";
                scope.searchedArray.length = 0;
            });
            
            scope.onClickDriverDashboard = function() {
            
                $('#spinner').show();
                scope.updateformileagelist = [];
                
                var arr = [];
                if(scope.IsAllChecked || scope.IsAllCheckedFlag ){
                    arr = scope.model.mileageList;
                }else{
                    arr = scope.showData;
                }
                angular.forEach(arr, function(item) {
                    if(item.isChecked == true || item.isSelected == true) {
                        
                        scope.updateformileagelist.push(item);
                    }
                });
             
                var truecheck = $filter("filter")(arr , {isChecked:true} );
                scope.chkcount = truecheck.length;
                var trueselect = $filter("filter")(arr , {isSelected:true} );
                scope.selectcount = trueselect.length;
      
                Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AdminManagerDriverDashboardController.approveMileages}',JSON.stringify(truecheck), JSON.stringify(trueselect),scope.model.name,scope.model.emailOfEmployee,
                function(result, event) {
                
                    if(event.status && result == 'success'){
                        /*let resultArray = result;
                        scope.model.mileageList = JSON.parse(resultArray);
                        */
                       
                        var tempArray = JSON.parse(JSON.stringify(scope.model.mileageList));
                        tempArray.forEach(function(item) {
                            scope.updateformileagelist.forEach(function(ui) {
                                if(item.id == ui.id) {
                                    if((item.isChecked != ui.isChecked) || ui.isChecked == true)
                                    {
                                        if(ui.isChecked){
                                            item.status = 'Rejected'
                                            item.approveddate = '';
                                            item.isChecked = true;
                                            item.isSelected = false;
                                        }
                                    }
                                    if((item.isSelected != ui.isSelected) || (item.isSelected == true && ui.isSelected == true)) {
                                        if(ui.isSelected){
                                            
                                            item.isChecked = false;
                                            item.isSelected = true;
                                            item.status = 'Approved'
                                            var dt = $filter('date')(new Date(), "MM/dd/yy");
                                            item.approveddate = dt;
                                        }
                                    }
                                }
                            })
                        })
                        scope.model.mileageList = JSON.parse(JSON.stringify(tempArray));
                        var flagstatus = '';
                        if(scope.selectedmileageidlist.length == 0 && scope.selectedrejectedmileageidlist.length == 0) {
                            $('#spinner').hide();
                            toastr.success('This Mileage has already flagged.');
                        }                                            
                        if(scope.selectcount > 0 && scope.selectedmileageidlist.length > 0){
                            flagstatus = flagstatus+'Approved';
                            scope.refreshpage(scope.model.mileageList);
                            scope.selectedmileageidlist = [];
                        }
                        if(scope.chkcount > 0 && scope.selectedrejectedmileageidlist.length > 0)
                        {
                            flagstatus = flagstatus+'Rejected';
                            scope.refreshpage(scope.model.mileageList);
                            scope.selectedrejectedmileageidlist = [];
                        }
                        scope.callfn(flagstatus);
                    }
                    else
                    {
                        $('#spinner').hide();
                        toastr.error('Something went wrong');
                    }
                    scope.$apply();
                });
            };
        },
        template: '<div class="modal fade driver-dashboard-monthrecord show in" tabindex="-1" role="dialog"aria-labelledby="driver-dashboard-monthrecord" id="driver-dashboard-monthrecord"><div class="modal-dialog modal-xl modal-dialog-centered"><div class="modal-content rounded-0"><button type="button" ng-click="cancel()" class="close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><div class="modal-body"><h4 ng-model="month">{{model.name}}</h4><div class="modal-divider"></div><div class="table-responsive"><div id="example_filter" class="dataTables_filter pull-right d-block" ng-show="showmanagermodalsearchbar"><div class="input-group w-85" ><i id="filtericon" class="fa fa-search" ng-if="search.length===0"></i><input class="form-control py-2 border-right-0 border" type="search" ng-model="search" ng-change="updatePagination()" placeholder="Search..." aria-controls="example" id="example-search-input" /></div></div><table id="driver-dashbord-month-model" class="table table-striped dt-responsive nowrap no-footer dataTable" cellspacing="0" width="100%"><thead><tr><th ng-click="sort(\'tripdate\')">Trip Date<span ng-show="sortKey == \'tripdate\'" class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}"></span></th><th ng-click="sort(\'origin\')">Origin<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'origin\'"></span></th><th ng-click="sort(\'destination\')">Dest.<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'destination\'"></span></th><th ng-click="sort(\'submitteddate\')">Submitted<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'submitteddate\'"></span></th><th ng-click="sort(\'approveddate\')">Approved<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'approveddate\'"></span></th><th ng-click="sort(\'mileage\')">Mileage<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'mileage\'"></span></th><th ng-click="sort(\'variableamount\')">Variable Amount<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'variableamount\'"></span></th><th><button class="btn btn-primary pull-right1">Approve <input type="checkbox" ng-click="CheckUncheckAll()" ng-model="IsAllChecked" ng-show="checkAllShowApprove"/></button></th><th class="vw-4"><button class="btn btn-third pull-right1">Flag </span><input type="checkbox" ng-show="checkAllShowFlag" ng-click="CheckUncheckAllForFlag()" ng-model="IsAllCheckedFlag"></button></th></tr></thead><tbody class="table-a-link"><tr ng-repeat="mil in showData |itemsPerPage:itemPerPage|filter:search" current-page:"currentPage"><td ng-model="mil.tripdate">{{ mil.tripdate}}</td><td ng-model="mil.origin">{{ mil.origin}}</td><td ng-model="mil.destination">{{ mil.destination }}</td><td ng-model="mil.submitteddate">{{ mil.submitteddate }}</td><td ng-model="mil.approveddate">{{mil.approveddate }}</td><td ng-model="mil.mileage">{{ mil.mileage }}</td><td ng-model="mil.variableamount" id="modalvariableid">${{ mil.variableamount }}</td><td ng-model="mil.status"><div ng-model="mil.status" ng-if="mil.status !=\'Approved\' && mil.mileage > \'0\'"></div><div class="pull-right1 mr-11" ng-if="mil.status !=\'Approved\' && mil.mileage > \'0\'"><input type="checkbox" ng-model="mil.isSelected" class="myteamcheck" ng-click="CheckUncheckHeader();"></div></td><td ng-model="mil.status"><div ng-model="mil.status" ng-if="mil.mileage > \'0\'"></div><div class="pull-right1 mr-11" ng-if="mil.mileage > \'0\'"><input type="checkbox" ng-model="mil.isChecked" class="flagcheck" ng-click="CheckUncheckHeaderForFlag();"></div></td></tr><tr ng-if="showData.length==0"><td colspan="9" class="table-nodata">No Records Available</td></tr></tbody><tfoot ng-if="displayDownloadBtn"><tr><th scope="row">Total</th><th colspan="4"> </th><th>{{total}} / {{totalMileage}}</th><th>${{totalvariablerate}} / ${{totalVariableAmount}}</th><th colspan="2"></th></tr></tfoot></table></div></div><div class="modal-footer"><div class="col-md-6" ng-if="displayDownloadBtn">Page {{currentPage}} of {{maxPage}} </div><div class="col-md-6"><ul ng-if="displayDownloadBtn" class="pagination float-right paginationformodal"><li class="page-item " ng-class="{\'disable-pagination\':currentPage === 1}"><a class="page-link" ng-click="previous()">Previous</a></li><li class="page-item"><a class="page-link" >{{currentPage}}</a></li><li class="page-item" ng-class="{\'disable-pagination\':currentPage === maxPage}"><a class="page-link" ng-click="next()" href="#">Next</a></li></ul><div class="paginationformodaldownloadbutton"><div excel-export="true" export-data="data()" ng-show="displayDownloadBtn" file-name="{{model.fileName}}"/><button class="btn btn-secondary float-right" ng-click="onClickDriverDashboard();" ng-show="displayBtn">Submit</button></div></div></div></div></div></div><div>'
    };
}
]);


                
                app.controller('managerdriverDashboardController',['$scope','$filter','$modal',
                    function($scope,$filter,$modal){
                        
                        var url_string = $(location).attr("href");
                        var url = new URL(url_string);
                        $scope.manid = url.searchParams.get("manid");
                        $scope.accid = url.searchParams.get("accid");
                        $scope.id = url.searchParams.get("id");
                        $scope.adminid = url.searchParams.get("adminid");
                     //   console.log($scope.adminid);
                        $scope.showteam = url.searchParams.get("showteam");
                        $scope.emailOfEmployee = '{!emailofEmployee}';
                        $scope.admindriver = false;
                        $scope.admindriver = url.searchParams.get("admindriver");
                        if($scope.admindriver == undefined || $scope.admindriver == ''){
                            $scope.admindriver = false;
                        }
                        
                        $scope.years = {!Last2Years};
                      //  console.log($scope.years);
                        $scope.years.sort(function(a,b){
                    
                            var numA = parseInt(a),
                                numB = parseInt(b);

                                if (numA < numB){ 
                                    return 1;
                                }else if (numA > numB){
                                    return -1;
                                }else{
                                    return 0; //default return value (no sorting)
                                }
                         })
                       
                        $scope.reimbursementDialog = new MileagesofReimbursements(false);
                        $scope.FromDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
                        $scope.IsAllChecked = false;
                        $scope.displayTeamRecordBtn = false;
                         $('#spinner').hide();
                        $scope.tabs = [{active: true}, {active: false}, {active: false},{active: false}];
                        $scope.packetandMeeting = function() {
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.getPacketandMeeting}',$scope.id,
                                function(result, event) {
                                    if(event.status && result != null && result != '') {
                                        $scope.packetstatus = [];
                                        $scope.packetstatus = JSON.parse(result);
                                        $scope.packet = $scope.packetstatus[0].Packet__c;
                                        $scope.meeting = $scope.packetstatus[0].Meeting__c;
                                        if($scope.packet == 'Being Generated'){
                                            document.getElementById("downloadbtn").style.visibility = "hidden";
                                            angular.element(document.querySelector("#beinggenratedsignature")).addClass(" active");
                                            angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#completesignature")).removeClass("active");
                                            angular.element(document.querySelector("#beinggenratedsignature")).addClass("btn.btn-secondary.pull-right");
                                        }
                                        else if($scope.packet == 'Sent for Signature')
                                        {
                                            document.getElementById("downloadbtn").style.visibility = "hidden";
                                            angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                            angular.element(document.querySelector("#sentforsignature")).addClass("active");
                                            angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#completesignature")).removeClass("active");
                                            angular.element(document.querySelector("#sentforsignature")).addClass("btn.btn-secondary.pull-right");

                                        }
                                        else if($scope.packet == 'Waiting for Signature')
                                        {
                                            document.getElementById("downloadbtn").style.visibility = "hidden";
                                            angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                            angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#waitingforsignature")).addClass(" active");
                                            angular.element(document.querySelector("#completesignature")).removeClass("active");
                                            
                                        }
                                        else if($scope.packet == 'Complete')
                                        {
                                            angular.element(document.querySelector("#beinggenratedsignature")).removeClass("active");
                                            angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                            angular.element(document.querySelector("#completesignature")).addClass("active");
                                            angular.element(document.querySelector("#completesignature")).removeClass("btn-secondary");
                                        }
                                        else{
                                            angular.element(document.querySelector("#beinggenratedsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#sentforsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#waitingforsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#completesignature")).addClass("blank-stepper");
                                        }

                                        if($scope.meeting == 'Scheduled'){
                                            angular.element(document.querySelector("#scheduledsignature")).addClass(" active");
                                            angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                            angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                            angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                            angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                                        }
                                        else if($scope.meeting == 'Sent'){
                                            angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                            angular.element(document.querySelector("#sentsignature")).addClass(" active");
                                            angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                            angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                            angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                                        }
                                        else if($scope.meeting == 'Completed'){
                                            angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                            angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                            angular.element(document.querySelector("#completedsignature")).addClass(" active");
                                            angular.element(document.querySelector("#completedsignature")).addClass("completed"); //mobio
                                            angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank"); //mobio
                                            angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                                        }
                                        else if($scope.meeting == 'Did Not Attend'){
                                            angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                            angular.element(document.querySelector("#sentsignature")).addClass("sent");
                                            angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");//mobio:to hide Completed div
                                            angular.element(document.querySelector("#span-didnotattend")).addClass("span-did-not-attend");//mobio:to color specific span red
                                            angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend");//mobio:to make "Did Not Attended" colored red
                                        }else{
                                            angular.element(document.querySelector("#scheduledsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#sentsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#completedsignature")).addClass("blank-stepper");
                                            angular.element(document.querySelector("#completedsignature")).addClass("completed"); 
                                            angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend");//mobio
                                            angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank");
                                        }
                                    }
                                },{escape: false}
                            );
                        }
                        $scope.packetandMeeting();
                        $scope.approveFunction = function(){
                            var count = 0;
                            $scope.checkAllShowForMyTeam = false;
                            angular.forEach($scope.mileages, function (item, key) {
                                if(item.totalReimbursements > '0.00' && item.status != 'Approved'){
                                    count++;
                                }
                            });
                            if(count > 0){
                                $scope.checkAllShowForMyTeam = true;
                            }
                            
                        }
                        $scope.myTeamCheckUncheckAll = function () {
                                if($scope.IsAllChecked == true)
                                    $scope.displayTeamRecordBtn = true;
                                else
                                    $scope.displayTeamRecordBtn = false;
                                
                                angular.forEach($scope.mileages, function(item) {
                                    item.isSelected = $scope.IsAllChecked;
                                });
                        }
                            
                        $scope.CheckUncheckHeader = function(status) {
                                var total = $('.approveChkForcurrentyear').length;
                                var total1 = $('.approveChkforpriviousyear').length;
                                
                                var count = 0;
                                angular.forEach($scope.mileages, function (item) {
                                    if(item.isSelected){
                                        count++;
                                    }
                                });
                                if(total == count)
                                    $scope.IsAllChecked = true;
                                else
                                    $scope.IsAllChecked = false;
                                
                                if(count > 0)
                                    $scope.displayTeamRecordBtn = true;   
                                else
                                    $scope.displayTeamRecordBtn = false;


                                if(total1 == count)
                                    $scope.IsAllChecked = true;
                                else
                                    $scope.IsAllChecked = false;
                                
                                
                        }
                        $scope.approveReimbursementsofManager = function() {
                            $scope.reimbursements = [];
                            for(var i=0;i<$scope.mileages.length; i++) {
                                if($scope.mileages[i].isSelected == true) {
                                    $scope.reimbursements.push($scope.mileages[i]);
                                }
                            }
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.approveReimbursements}',$scope.selectedYear,$scope.id,$scope.accid,JSON.stringify($scope.reimbursements),
                                function(result, event) {
                                    if(event.status && result != null) { 
                                        if(result != ''){
                                            $scope.mileages = [];
                                            $scope.mileages = JSON.parse(result);     
                                        }
                                        else
                                        {
                                            $scope.mileages = [];
                                        }
                                        $scope.approveFunction();
                                    }
                                    else
                                    {
                                        $('#spinner').hide();
                                        toastr.error('Something went wrong');
                                    }
                                    $scope.$apply();
                                },
                                {escape: false}
                            );
                        };

                        $scope.openmodal = function(clickedMonth) {
                    
                            $scope.clickedMonth = clickedMonth;  
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AdminManagerDriverDashboardController.getMileages}',$scope.clickedMonth,$scope.selectedYear,$scope.id,
                                function(result, event) {
                                    if(event.status && result != null) 
                                    {
                                        /*console.log(result);*/
                                        if(result != '') {

                                            var mileageList = [];
                                            var resultdata = result.replace(/\\/g,'');
                                            var mileageList = JSON.parse(resultdata);
                                            $scope.exportReimList = [];
                                            $scope.exportReimList.push(["Contact Email", "Day Of Week","Trip Date","Start Time","End Time","Trip Origin","Trip Destination","Mileage","Tracing Style","Status","Date Submitted","Date Approved","Maint/Tires","Fuel Rate","Variable Rate","Variable Amount","Notes"]);
                                            angular.forEach(mileageList, function (item, key) {
                                                $scope.exportReimList.push([item.emailaddress, item.dayofweek,item.tripdate,item.starttime,item.endtime,item.origin,item.destination,item.mileage,item.tracingstyle,item.status,item.submitteddate,item.approveddate,item.maintTyre,item.fuelRate,item.variablerate,item.variableamount,item.notes]);
                                            });
                                            $scope.fileName = $scope.adminname +'\'s Mileages '+$scope.FromDate;
                                            
                                            $scope.reimbursementDialog.open($scope.fileName,clickedMonth,mileageList,$scope.emailOfEmployee);
                                            
                                        }else
                                        {
                                            var mileageList = [];
                                            $scope.exportReimList = [];
                                            $scope.exportReimList.push(["Contact Email", "Day Of Week","Trip Date","Start Time","End Time","Trip Origin","Trip Destination","Mileage","Tracing Style","Status","Date Submitted","Date Approved","Maint/Tires","Fuel Rate","Variable Rate","Variable Amount","Notes"]);
                                            angular.forEach(mileageList, function (item, key) {
                                                $scope.exportReimList.push([item.emailaddress, item.dayofweek,item.tripdate,item.starttime,item.endtime,item.origin,item.destination,item.mileage,item.tracingstyle,item.status,item.submitteddate,item.approveddate,item.maintTyre,item.fuelRate,item.variablerate,item.variableamount,item.notes]);
                                            });
                                            $scope.fileName = $scope.adminname +'\'s Mileages '+$scope.FromDate;
                                            $scope.reimbursementDialog.open($scope.fileName,clickedMonth,mileageList,$scope.emailOfEmployee);
                                        }
                                        
                                    }
                                    else
                                    {
                                        $('#spinner').hide();
                                        toastr.error('Something went wrong');
                                    }
                                },
                                {escape: false}
                            );
                        };

                        $scope.empContact = {!obj_current_contact_details};
                        $scope.adminname = $scope.empContact[0].Name;
                        $scope.empReimList = JSON.parse('{!ReimbursementsList}');
                        $scope.mileageList = '';
                        $scope.gaspricedata = {!gaspriceforpreviosmonth};
                        if($scope.gaspricedata != null && $scope.gaspricedata != '') {
                            if($scope.gaspricedata[0].Fuel_Price__c != '' && $scope.gaspricedata[0].Fuel_Price__c != null)
                            {
                                $scope.fuelprice = JSON.stringify($scope.gaspricedata[0].Fuel_Price__c);    
                            } else {
                                $scope.fuelprice = '';
                            }
                        } else {
                            $scope.fuelprice = '';
                        }
                        $scope.showunapprove = false;
                        if($scope.empReimList == 0){
                            $scope.unapprovemileage = JSON.stringify($scope.empReimList);
                            $scope.showunapprove = true;
                        }
                        else{
                            var count = 0;
                            angular.forEach($scope.empReimList, function (item, key) {
                                count = count + item.Total_Pending__c;
                            });
                            $scope.unapprovemileage = count;
                            $scope.showunapprove = true;    
                        }

                        $scope.selectedYear = '';
                        $scope.fetchMileage = function(clickedyear){
                            $('#spinner').show();
                            $scope.selectedYear = clickedyear;
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.getAllReimbursements}',$scope.selectedYear,$scope.id,$scope.accid,
                                function(result, event) {
                                    if(event.status && result != null){
                                        if(result != ''){
                                            $scope.mileages = [];
                                            $scope.mileages = JSON.parse(result); 
                                        }
                                        else
                                        {
                                            $scope.mileages = [];
                                        }
                                        $('#spinner').hide();
                                        $scope.approveFunction();
                                    }
                                    else
                                    {
                                        $('#spinner').hide();
                                        toastr.error('Something went wrong.');
                                    }
                                    $scope.$apply();
                                },
                                {escape: false}
                            );
                        }

                        $scope.sortKey = 'intmonth';    //set the sortKey to the param passed   
                        $scope.reverse = true;
                        $scope.sort = function(keyname){
                            $scope.reverse = ($scope.sortKey === keyname)? !$scope.reverse : false; 
                            $scope.sortKey = keyname; 
                        }

                        $scope.sortKey1 = 'intmonth';   //set the sortKey to the param passed   
                        $scope.reverse1 = true;
                        $scope.sort1 = function(keyname){
                            $scope.reverse1 = ($scope.sortKey1 === keyname)? !$scope.reverse1 : false; 
                            $scope.sortKey1 = keyname; 
                        }

                        $scope.fetchEmpReimList = function(result) {
                            $scope.empReimList = result;
                            $scope.unapprovemileage = 0;
                            if($scope.empReimList == 0){
                                $scope.showunapprove = false;
                                $scope.unapprovemileage = 0;
                                $scope.showunapprove = true;
                            
                            }
                            else{
                                var count = 0;    
                                $scope.showunapprove = false;
                                angular.forEach($scope.empReimList, function (item, key) {
                                    count = count + item.Total_Pending__c;
                                });
                                $scope.unapprovemileage = count;
                                $scope.showunapprove = true;
                            }                            
                        }

                        $scope.refreshpage = function(updatedmileagelist) {
                            $scope.mileages = [];
                            /*console.log('Year:-'+$scope.selectedYear);*/
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.getAllReimbursements}',$scope.selectedYear,$scope.id,$scope.accid,$scope.manid,
                                function(result, event) {
                                    if(event.status && result != null){
                                        if(result != '') {
                                            $scope.mileages = [];
                                            $scope.mileages = JSON.parse(result);     
                                        }
                                        else
                                        {
                                            $scope.mileages = [];                                        
                                        }
                                        $('#spinner').hide();
                                        $scope.approveFunction();
                                    }
                                    else
                                    {
                                        $('#spinner').hide();
                                        toastr.error('Something went wrong');
                                    }
                                    $scope.$apply();
                                },
                                {escape: false}
                            );
                            $scope.exportReimList = []
                            
                            $scope.exportReimList.push(["Trip Date", "Origin","Description","Submitted","Approved Date","Mileage","Variable Amount"]);
                            angular.forEach(updatedmileagelist, function (item, key) {
                                $scope.exportReimList.push([item.tripdate, item.origin,item.destination,item.submitteddate,item.approveddate,item.mileage,item.variableamount]);
                            });
                        }

                        $scope.modalshowforapproved = function(status) {
                            
                            $('#spinner').hide();
                            $scope.flagstatus;
                            if(status == 'Approved')
                                $scope.flagstatus = 'Approved';
                            if(status == 'Rejected')
                                $scope.flagstatus = 'Rejected';
                            if(status == 'ApprovedRejected')
                                $scope.flagstatus = 'Approved and Rejected';
                            $scope.flagstatus
                            
                                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.getReimbursementsListClone}',$scope.id,
                                    function(result, event) {
                                        if(event.status && result != null) 
                                        {
                                            var rs = JSON.parse(result);
                                            $scope.fetchEmpReimList(rs);
                                        }
                                    },{escape: false}
                                );

                            $scope.$modalInstance = $modal.open({
                                template:'<button type="button" ng-click="cancel()" class="childcls close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="modal-body text-center"><div class="checkhead"><h4>Employee mileage has been {{flagstatus }}.</h4></div><div class="check-in-info"><p></p></div><div class="check-submit"><button type="button" ng-click="ok()" class="btn btn-primary" data-dismiss="modal">OK</button></div></div>',
                                scope: $scope
                            });
                        }
                        $scope.ok = function () {
                            $scope.$modalInstance.close();
                        };
                        $scope.cancel = function () {
                            $scope.$modalInstance.dismiss('cancel');
                        };

                        $scope.complianceCalculation = function() {
                            $('#spinner').show();
                            $scope.detailreportfordownload = [];
                            $scope.summaryreportfordownload = [];
                            $scope.filenamefordetail = $scope.adminname + ' Annual Tax Liability Detail Report';
                            $scope.fileNameforsummary = $scope.adminname + ' Annual Tax Liability Summary Report';
                            
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.AdminManagerDriverDashboardController.getCompliance}',$scope.id,
                                function(result, event) {
                                    if(event.status && result != null) {
                                        /*console.log(JSON.stringify(result));*/
                                        $scope.messageofcompliance = JSON.parse(result[1]);
                                        $scope.dummyname = JSON.parse(result[0]);
                                        if(result.length > 2){
                                            /*console.log('result name :- '+$scope.dummyname);*/
                                            $scope.$apply(function(){
                                                $scope.compliancedata = JSON.parse(result[2]);
                                                $scope.detailreport = JSON.parse(result[3]);
                                                $scope.summaryreport = JSON.parse(result[4]);
                                                $scope.Reimbursements = JSON.parse(result[5]);
                                                $scope.maxallow = JSON.parse(result[6]);
                                                $scope.taxliablity = JSON.parse(result[7]);
                                            });
                                            
                                            $scope.detailreportfordownload.push(["Year","Total Reimbursement","Month","IRS allowable","Imputed Income","Employee Id","Email","Driver Name","Approved Mileage"]);
                                            angular.forEach($scope.detailreport,function(item){
                                                $scope.detailreportfordownload.push([item.year,item.totalreim,item.month,item.irsallowable,item.imputedincome,item.employeeid,item.emailid,item.drivername,item.approvedmileages]);
                                            });

                                            $scope.summaryreportfordownload.push(["Year","Total Reimbursement","Month","IRS allowable","Imputed Income","Employee Id","Email","Driver Name","Approved Mileage"]);
                                            angular.forEach($scope.summaryreport,function(item){
                                                $scope.summaryreportfordownload.push([item.year,item.totalreim,item.month,item.irsallowable,item.imputedincome,item.employeeid,item.emailid,item.drivername,item.approvedmileages]);
                                            });
                                            $scope.$apply(function(){
                                                $scope.summrylenth = $scope.summaryreportfordownload.length
                                            });
                                            $('#spinner').hide();
                                        }
                                        else
                                        {
                                            $scope.$apply(function(){
                                                $scope.compliancedata = [];
                                                $scope.summrylenth = 0;
                                            });
                                            $('#spinner').hide();
                                        }
                                    }
                                },
                                {escape: false}
                            );
                        }
                    }]);
        </script>
        <body ng-app="managerdriverDashboardModule" ng-controller="managerdriverDashboardController">
                <div id="spinner">
                        <div class="spinner-background"></div>
                        <div class="spinner-load">
                            <div class="spinner-border text-light" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                </div>
                    <header>
                        <div class="main-header sticky" id="myHeader">
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-md-12">
                                        <nav class="navbar navbar-expand-md my-0 my-md-1 px-0">
                                            <a class="navbar-brand col-6 col-sm-6 col-md-3 col-lg-3 col-xl-3 px-0" ng-show="!admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}">
                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/logo/mBurse-logo_rev.png')}" class="img-fluid" href="javascript:void(0)" alt="logo"/>
                                            </a>
                                            <a class="navbar-brand col-6 col-sm-6 col-md-3 col-lg-3 col-xl-3 px-0" ng-show="admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}&admindriver={{admindriver}}">
                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/logo/mBurse-logo_rev.png')}" class="img-fluid" href="javascript:void(0)" alt="logo"/>
                                            </a>
                                            <button class="navbar-toggler" type="button" data-toggle="collapse"
                                                data-target="#collapsibleNavbar">
                                                <span class="navbar-toggler-icon"><i class="fa fa-bars"></i></span>
                                            </button>
                                            <div class="collapse navbar-collapse flex-column col-12 col-sm-6 col-md-9 col-lg-9 col-xl-9 ml-3 ml-sm-0 ml-lg-0 align-items-end"
                                                id="collapsibleNavbar">
                                                <ul class="navbar-nav flex-row">
                                                    <li class="nav-item active">
                                                        <a class="nav-link text-white" ng-show="!admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Dashboard</a>
                                                        <a class="nav-link text-white" ng-show="admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Dashboard</a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a class="nav-link text-white" ng-show="!admindriver" href="/app/roster?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Drivers</a>
                                                        <a class="nav-link text-white" ng-show="admindriver" href="/app/roster?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Drivers</a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a class="nav-link text-white" ng-show="!admindriver" href="/app/reportlist?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Reports</a>
                                                        <a class="nav-link text-white" ng-show="admindriver" href="/app/reportlist?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Reports</a>
                                                    </li>
                                                    <li class="nav-item"> 
                                                        <a class="nav-link text-white" ng-show="admindriver" href="/app/driveradminmanagermydetail?accid={{accid}}&showteam={{showteam}}&id={{adminid}}&admindriver={{admindriver}}">My Details</a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a class="nav-link text-white" href="/app/secur/logout.jsp">Logout</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </header>
                    <section class="container-fluid" ng-cloak="true">
                            <div class="font-s my-3">
                                    <a ng-show="!admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}&showteam={{showteam}}"><i class="fas fa-chevron-left"></i> Back</a>
                                    <a ng-show="admindriver" href="/app/managerdashboardfromadmindriver?managerid={{manid}}&accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}"><i class="fas fa-chevron-left"></i> Back</a>
                                </div>
                            <div class="font-s my-3">
                                <h1 class="form-heading mb-30">{{empContact[0].Name}}</h1>
                            </div>
                            <div class="form-divider"></div>
                            <div class="row">
                                <div class="col-md-12 col-sm-12 col-xl-9 col-lg-9">
                                    <div class="row">
                                        <div class="col-12 col-md-4 col-sm-12 col-xl-4 col-lg-4">
                                            <div class="admin-driver-detail-dashboard">
                                                <div class="location-info">
                                                    <div class="admin-driver-dashboard-address">
                                                        <h5>Location</h5>
                                                        <p>{{ empContact[0].MailingCity + "," + empContact[0].MailingState + " " + empContact[0].MailingPostalCode}}</p>
                                                    </div>
                                                    <div class="admin-driver-dashboard-address">
                                                        <h5>Fixed Rate</h5>
                                                        <p>${{ empContact[0].Fixed_Amount__c }}</p>
                                                    </div>
                                                    <div class="admin-driver-dashboard-address">
                                                        <h5>Compliance</h5>
                                                        <p>{{ empContact[0].compliancestatus__c }}</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-md-5 col-sm-12 col-xl-4 col-lg-5 ">
                                            <div class="col-12 col-md-12 col-lg-12 col-xl-12 pl-sm-0">
                                                <div class="admin-driver-dashboard-milagedetail">
                                                    <div class="row">
                                                        <div class="col-3 col-sm-3 col-md-4 col-lg-3 col-xl-3 ">
                                                            <div class="fuel-icon">
                                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/fuelpump-icon.png')}" alt="icon"/>
                                                            </div>
                                                        </div>
                                                        <div class="col-9 col-sm-9 col-md-8 col-lg-9 col-xl-9">
                                                            <div class="fuel-icon-detail">
                                                                <h5>Fuel Price</h5>
                                                                <p ng-if="fuelprice == ''"></p>
                                                                <p ng-if="fuelprice != ''">${{fuelprice}}</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="admin-driver-dashboard-milagedetail mt-2">
                                                    <div class="row">
                                                        <div class="col-3 col-sm-3 col-md-3">
                                                            <div class="fuel-icon">
                                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/car-icon.png')}" alt="icon"/>
                                                            </div>
                                                        </div>
                                                        <div class="col-9 col-sm-9 col-md-9">
                                                            <div class="fuel-icon-detail">
                                                                <h5>Unapproved Mileage</h5>
                                                                <p ng-if="showunapprove">{{unapprovemileage}}</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 col-sm-12 col-xl-4 col-lg-3 mb-3 mb-sm-0 mb-md-0 mt-3 mt-sm-0 mt-md-0">
                                            <div class="col-6 col-sm-6 col-md-6 float-right" ng-if="empContact.Account.Logo_Document_Id__c != undefined || empContact.Account.Logo_Document_Id__c != ''">
                                                <img class="img-fluid" ng-src="{{empContact[0].Account.Logo_Document_Id__c}}"></img>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12 col-xl-3 col-lg-3">
                                    <div class="admin-driver-dashboard-card">
                                        <div ng-if="empContact.Car_Image__c != undefined || empContact.Car_Image__c != ''">
                                            <img class="img-fluid" ng-src="{{empContact[0].Car_Image__c}}"></img>
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">{{ empContact[0].Vehicle_Type__c }}</h5>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-divider"></div>
                            <div class="my-5 admin-roster-tab-section">
                                <ul class="nav nav-pills">
                                    <li class="nav-item mb-3">
                                        <a class="nav-link active" data-toggle="pill" href="#pills-admin-dashbord-myteam">My Trips</a>
                                    </li>
                                    <li class="nav-item mb-3">
                                        <a class="nav-link" data-toggle="pill" href="#pills-admin-dashbord-mileage">Plan Info</a>
                                    </li>
                                </ul>
                                <div class="tab-content timeline">
                                    <div class="tab-pane active" id="pills-admin-dashbord-myteam">
                                        <div id="accordion" role="tablist">
                                            <div class="card insurance-declatarion-card" ng-repeat="yr in years">
                                                <div class="card-header" role="tab" id="Cardheading">
                                                    <h5 class="mb-0">
                                                        <a class="collapsed" data-toggle="collapse" href="#collapseCard{{$index}}" aria-expanded="false" aria-controls="collapseCard" ng-click="fetchMileage(yr)" >
                                                            {{yr}}
                                                        </a>
                                                    </h5>
                                                </div>
                                                <div id="collapseCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading"
                                                  data-parent="#accordion">
                                                    <div class="card-body">
                                                        <div class="table-responsive">
                                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0"
                                                                width="100%">
                                                                <thead>
                                                                    <tr>
                                                                        <th >Month
                                                                            <span class="sort-icon pull-right" ></span> 
                                                                        </th>
                                                                        <th >Fuel
                                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Fuel'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                                        </th>
                                                                        <th >Mileage
                                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                                        </th>
                                                                        <th >Fixed + Variable<br/>Reimbursement
                                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Reimbursements'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"> 
                                                                        </span>
                                                                        </th>
                                                                        <th >Total Reimbursement
                                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalReimbursements'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                                        </th>
                                                                        <th><!--  ng-click="sort('status')" -->
                                                                            <button class="btn btn-primary pull-right1">Approve<!--  <input ng-show="checkAllShowForMyTeam" type="checkbox" ng-model="IsAllChecked" ng-click="myTeamCheckUncheckAll()" />  --></button><!-- <span class="sort-icon pull-right" ng-show="sortKey=='status'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span> -->
                                                                        </th> 
                                                                    </tr>
                                                                </thead>
                                                                <tbody class="driver-dashboard-table table-a-link">
                                                                    <tr dir-paginate="ml in mileages |orderBy:sortKey:reverse |itemsPerPage:12">
                                                                        <td ng-click="openmodal(ml.month)"><a>{{ml.month}}</a></td>
                                                                        <td ng-if="ml.fuel != null && ml.fuel != ''">${{ml.fuel}}</td>
                                                                        <td ng-if="ml.fuel == null || ml.fuel == ''"></td>
                                                                        <td>{{ml.mileage | currency:value=""}}</td>
                                                                        <td>{{ml.varibleAndFixedReimbursements}}</td>
                                                                        <td>${{ml.totalReimbursements}}</td>
                                                                        <td >
                                                                            <div class="pull-right1" ng-model="ml.status" ng-if="ml.status=='Approved' && ml.mileage > '0.00'"> {{ml.status}} on {{ml.approveddate}}
                                                                            </div>
                                                                            <div ng-model="ml.status" ng-if="ml.status=='Rejected' "> {{ml.status}} on {{ml.approveddate}}
                                                                            </div>
                                                                            <div  class="pull-right1 mr-11" ng-if="ml.status !='Approved' && ml.mileage > '0.00'">
                                                                                <input  type="checkbox" ng-model="ml.isSelected" ng-change="CheckUncheckHeader()" class="approveChkForcurrentyear" />
                                                                            </div>
                                                                        </td> 
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                            <button class="btn btn-secondary float-right" ng-show="displayTeamRecordBtn" ng-click="approveReimbursementsofManager();">Submit</button>
                                                            <!-- <dir-pagination-controls max-size="5" direction-links="true" boundary-links="true" autoHide="true" responsive="true" class="pull-right"></dir-pagination-controls> -->
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="pills-admin-dashbord-mileage">
                                        <c:PlanInfoComponent driverPacketDocCount="{!obj_driverpacket_attachementsize}"
                                                             insuranceDocCount="{!obj_attachementsize}"
                                                             driverPacketId="{!If(obj_driverpacket_attachementsize > 0, obj_driver_driverpacket[0], null)}"
                                                             insuranceId="{!If(obj_attachementsize > 0, obj_driver_insurance[0], null)}" />
                                    </div>
                                </div>
                            </div>
                    </section>
            <driver-reimbursements-dialog-directive model="reimbursementDialog" modal-Open="modalshowforapproved(status)" callback-Fn="refreshpage(updatedmileagelist)" export-data="exportReimList"></driver-reimbursements-dialog-directive>
            <apex:include pageName="EMC_Common_footer"/>
            <script src="{!URLFOR($Resource.DirectiveJS)}"></script>
        </body>
    </html>  
</apex:page>